name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  PYTHON_DEFAULT: "3.11"

jobs:
  # Basic Testing
  test:
    name: Tests (Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -e .
        pip install pytest pytest-cov coverage

    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=config_manager --cov-report=xml --cov-report=term-missing
      continue-on-error: false

    - name: Upload coverage
      if: matrix.python-version == env.PYTHON_DEFAULT
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  # Code Quality (Simplified)
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_DEFAULT }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -e .
        pip install black isort flake8 mypy

    - name: Check code formatting with black
      run: black --check --diff config_manager tests examples scripts
      continue-on-error: true

    - name: Check import sorting with isort
      run: isort --check-only --diff config_manager tests examples scripts
      continue-on-error: true

    - name: Lint with flake8
      run: flake8 config_manager tests examples scripts --max-line-length=88 --extend-ignore=E203,W503,E501
      continue-on-error: true

    - name: Type check with mypy
      run: mypy config_manager --config-file=mypy.ini
      continue-on-error: true

  # Package Build
  package:
    name: Package Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [test, code-quality]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_DEFAULT }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install build

    - name: Build package
      run: python -m build

    - name: Upload package artifacts
      uses: actions/upload-artifact@v3
      with:
        name: python-package
        path: dist/
        retention-days: 7
